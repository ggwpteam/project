/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.47
 * Generated at: 2020-01-05 17:25:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class error_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    java.lang.Throwable exception = org.apache.jasper.runtime.JspRuntimeLibrary.getThrowable(request);
    if (exception != null) {
      response.setStatus(javax.servlet.http.HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
    }
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	int statusCode = response.getStatus();
	System.out.println("statusCode@erreor.jsp= "+statusCode);
	
	String msg = "";
	
	if(statusCode == 404) 
		msg = "해당 페이지를 찾을 수 없습니다.";
	else
		msg = "페이지 로딩중 에러가 발생하였습니다.";

	/* String msg = exception == null ? String.valueOf(statusCode) : exception.getMessage(); */

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\" >\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Hotel BlueMoon</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/css/error.css\">\r\n");
      out.write("<style>\r\n");
      out.write("#goHomeBtn{\r\n");
      out.write("\twidth: 80px;\r\n");
      out.write("\theight: 80px;\r\n");
      out.write("\tmargin-top: 32px;\r\n");
      out.write("\tmargin-left: 20px;\r\n");
      out.write("\tborder: none;\r\n");
      out.write("\tbackground: #eaeaea;\r\n");
      out.write("}\r\n");
      out.write("#goHomeImg{\r\n");
      out.write("\twidth: 80px;\r\n");
      out.write("\theight: 80px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- partial:index.partial.html -->\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Encode+Sans+Semi+Condensed:100,200,300,400\" rel=\"stylesheet\">\r\n");
      out.write("<button onclick=\"goHome()\" id=\"goHomeBtn\"><img id=\"goHomeImg\" src=\"");
      out.print(request.getContextPath() );
      out.write("/images/goHome.png\" alt=\"\"/></button>\r\n");
      out.write("<body class=\"loading\">\r\n");
      out.write("  <h1>ErrorCode : ");
      out.print(statusCode );
      out.write("</h1>\r\n");
      out.write("  <h2>");
      out.print(msg );
      out.write("</h2>\r\n");
      out.write("  <h2>관리자에게 문의하세요.</h2>\r\n");
      out.write("  \r\n");
      out.write("  <div class=\"gears\">\r\n");
      out.write("    <div class=\"gear one\">\r\n");
      out.write("      <div class=\"bar\"></div>\r\n");
      out.write("      <div class=\"bar\"></div>\r\n");
      out.write("      <div class=\"bar\"></div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"gear two\">\r\n");
      out.write("      <div class=\"bar\"></div>\r\n");
      out.write("      <div class=\"bar\"></div>\r\n");
      out.write("      <div class=\"bar\"></div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"gear three\">\r\n");
      out.write("      <div class=\"bar\"></div>\r\n");
      out.write("      <div class=\"bar\"></div>\r\n");
      out.write("      <div class=\"bar\"></div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  <script src=\"https://code.jquery.com/jquery-1.10.2.js\"></script>\r\n");
      out.write("  <script src=\"js/main.js\" type=\"text/javascript\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("<!-- partial -->\r\n");
      out.write("<script>\r\n");
      out.write("$(function() {\r\n");
      out.write("\tsetTimeout(function(){\r\n");
      out.write("\t\t$('body').removeClass('loading');\r\n");
      out.write("\t}, 1000);\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function goHome(){\r\n");
      out.write("\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("\";\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
